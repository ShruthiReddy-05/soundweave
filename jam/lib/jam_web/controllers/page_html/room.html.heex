<!DOCTYPE html> 
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Live Jamming App - Room</title>
    <style>
        body {
            margin: 0;
            font-family: Arial, sans-serif;
            background-color: #f8f8f8;
            color: #333;
            height: 100vh;
            display: flex;
            flex-direction: column;
            align-items: center;
            border: 5px solid black;
        }

        .main-wrapper {
            display: flex;
            width: 100%;
            height: 100%;
        }

        .logo {
            position: absolute;
            top: 20px;
            left: 20px;
            font-size: 32px;
            font-weight: bold;
            color: black;
        }

        .left-container {
            width: 50%; /* Take up half the width */
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            padding: 20px;
            box-sizing: border-box;
        }

        .container {
            width: 100%;
            max-width: 600px;
            background: white;
            border-radius: 10px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            padding: 20px;
            text-align: center;
        }

        .video-container {
            display: flex;
            align-items: center;
            justify-content: center;
            background-color: #000;
            border-radius: 8px;
            width: 100%;
            height: 300px; /* Adjusted for a balanced layout */
            overflow: hidden;
            margin-bottom: 20px;
        }

        #local-video {
            width: 100%;
            height: 100%;
        }

        .button-container {
            display: flex;
            justify-content: center;
            gap: 20px;
            margin-top: 10px;
        }

        .toggle-button {
            font-size: 30px;
            padding: 10px 20px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 50%;
            cursor: pointer;
        }

        .toggle-button.off {
            background-color: #f44336;
        }

        #error-message {
            color: red;
            margin-top: 10px;
        }

        .right-container {
            flex: 1;
            display: flex;
            flex-direction: column;
            justify-content: flex-start;
            align-items: flex-start;
            padding: 20px;
            background-color: #fff;
            border-left: 2px solid #ccc;
            margin-top: 60px; /* Moves track list further down */
        }

        .track-list {
            width: 100%;
            margin-top: 20px;
        }

        .track {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px;
            margin-bottom: 10px;
            border: 1px solid #ddd;
            border-radius: 8px;
            background-color: #f9f9f9;
        }

        .track-name {
            font-size: 18px;
            color: #333;
        }

        .play-button {
            font-size: 18px;
            padding: 5px 10px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }
    </style>
</head>
<body>
    <!-- Logo -->
    <div class="logo">soundWEave</div>

    <div class="main-wrapper">
        <!-- Left Container -->
        <div class="left-container">
            <div class="container" id="room-page">
                <!-- Video Container -->
                <div class="video-container">
                    <video id="local-video" autoplay muted playsinline></video>
                </div>

                <!-- Error Message -->
                <div id="error-message"></div>

                <!-- Button Container -->
                <div class="button-container">
                    <!-- Camera toggle button -->
                    <button id="toggle-button" class="toggle-button">üé•</button> 
                    <!-- Audio toggle button -->
                    <button id="audio-toggle-button" class="toggle-button">üéôÔ∏è</button>
                </div>
            </div>
        </div>

        <!-- Right Container -->
        <div class="right-container">
            <h2>Track List</h2>
            <div class="track-list" id="track-list">
                <div class="track">
                    <span class="track-name">Track 1</span>
                    <button class="play-button" onclick="playTrack('track1.mp3')">‚ñ∂Ô∏è Play</button>
                </div>
                <div class="track">
                    <span class="track-name">Track 2</span>
                    <button class="play-button" onclick="playTrack('track2.mp3')">‚ñ∂Ô∏è Play</button>
                </div>
                <div class="track">
                    <span class="track-name">Track 3</span>
                    <button class="play-button" onclick="playTrack('track3.mp3')">‚ñ∂Ô∏è Play</button>
                </div>
            </div>
        </div>
    </div>

    <script>
        let mediaStream = null;
        let isCameraOn = true;
        let isAudioOn = true;

        const userVideoElement = document.getElementById("local-video");
        const errorMessageElement = document.getElementById("error-message");
        const toggleButton = document.getElementById("toggle-button");
        const audioToggleButton = document.getElementById("audio-toggle-button");

        const audio = new Audio();

        // Request media permissions and initialize stream
        function requestMediaPermissions() {
            navigator.mediaDevices.getUserMedia({ video: true, audio: true })
                .then(stream => {
                    mediaStream = stream;
                    userVideoElement.srcObject = stream;
                })
                .catch(err => {
                    console.error("Error accessing user media:", err);
                    errorMessageElement.textContent = "Unable to access your camera and microphone. Please check your permissions.";
                });
        }

        // Toggle Camera
        toggleButton.addEventListener("click", () => {
            if (mediaStream) {
                const videoTrack = mediaStream.getVideoTracks()[0];
                videoTrack.enabled = !videoTrack.enabled;
                isCameraOn = videoTrack.enabled;
                toggleButton.innerHTML = isCameraOn ? "üé•" : "‚ùå";
                toggleButton.classList.toggle("off", !isCameraOn);
            }
        });

        // Toggle Audio
        audioToggleButton.addEventListener("click", () => {
            if (mediaStream) {
                const audioTrack = mediaStream.getAudioTracks()[0];
                audioTrack.enabled = !audioTrack.enabled;
                isAudioOn = audioTrack.enabled;
                audioToggleButton.innerHTML = isAudioOn ? "üéôÔ∏è" : "üîá";
                audioToggleButton.classList.toggle("off", !isAudioOn);
            }
        });

        // Play selected track
        function playTrack(src) {
            audio.src = src;
            audio.play();
        }

        // Initialize media permissions on load
        requestMediaPermissions();
    </script>
</body>
</html>